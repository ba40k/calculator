Index: stack.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\n// Created by radamir on 19.11.24.\n//\n\n#ifndef STACK_H\n#define STACK_H\ntemplate<typename  T>\nclass Stack {\nprivate:\n    T* array;\n    int curSize;\n    int curCapacity;\n    const int INITIAL_CAPACITY = 16;\n    void reallocate();\npublic:\n    Stack();\n    void push(T data);\n    T top() const;\n    bool empty() const;\n    void pop();\n    int size()const;\n    int capacity() const;\n    ~Stack();\n};\n#endif //STACK_H\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/stack.h b/stack.h
--- a/stack.h	(revision df5ea0957ade420af59830b634c6097802b57e18)
+++ b/stack.h	(date 1732039149828)
@@ -1,7 +1,7 @@
 //
 // Created by radamir on 19.11.24.
 //
-
+#include <iostream>
 #ifndef STACK_H
 #define STACK_H
 template<typename  T>
Index: stack.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\n// Created by radamir on 19.11.24.\n//\n#include \"stack.h\"\n#include <iostream>\n#include <array>\n#include <array>\n#include <array>\n#include <array>\n#include <array>\n#include <array>\n#include <compare>\n\ntemplate<typename T>\nStack<T>::Stack() {\n    curCapacity = INITIAL_CAPACITY;\n    array = new T[curCapacity];\n    curSize =0;\n}\n\ntemplate<typename T>\nvoid Stack<T>::reallocate() {\n    curCapacity*=2;\n    T* newArray = new T[curCapacity];\n    for (int i =0;i<curSize;i++) {\n        newArray[i] = array[i];\n    }\n    delete[] array;\n    array = newArray;\n}\n\ntemplate<typename T>\nvoid Stack<T>::push(T data) {\n    if (curSize < curCapacity) {\n        array[curSize] = data;\n        curSize++;\n        return ;\n    }\n    reallocate();\n    push(data);\n}\n\ntemplate<typename T>\nvoid Stack<T>::pop() {\n    if (curSize ==0) {\n        std::cerr<<\"Stack is empty\"<<std::endl;\n        std::exit(EXIT_FAILURE);\n    }\n    curSize--;\n}\ntemplate<typename T>\nbool Stack<T>::empty() const {\n    return (curSize == 0);\n}\n\ntemplate<typename T>\nint Stack<T>::capacity() const {\n    return curCapacity;\n}\n\ntemplate<typename T>\nint Stack<T>::size() const {\n    return curSize;\n}\n\ntemplate<typename T>\nT Stack<T>::top() const {\n    if (curSize == 0) {\n        std::cerr<<\"Stack is empty\"<<std::endl;\n        std::exit(EXIT_FAILURE);\n    }\n    return array[curSize-1];\n}\ntemplate<typename T>\nStack<T>::~Stack() {\n    delete[] array;\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/stack.cpp b/stack.cpp
--- a/stack.cpp	(revision df5ea0957ade420af59830b634c6097802b57e18)
+++ b/stack.cpp	(date 1732039280059)
@@ -2,14 +2,7 @@
 // Created by radamir on 19.11.24.
 //
 #include "stack.h"
-#include <iostream>
-#include <array>
-#include <array>
-#include <array>
-#include <array>
-#include <array>
-#include <array>
-#include <compare>
+
 
 template<typename T>
 Stack<T>::Stack() {
